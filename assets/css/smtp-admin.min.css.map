{"version":3,"file":"smtp-admin.min.css","sources":["smtp-admin.scss","_variables.scss","vendor/_include-media.scss","_general.scss"],"sourcesContent":["@import \"variables\";\r\n@import 'vendor/include-media';\r\n@import \"general\";\r\n\r\n#wp-mail-smtp-header {\r\n\tborder-top: 3px solid $orange;\r\n\tpadding: $content-padding;\r\n\r\n\timg {\r\n\t\tdisplay: block;\r\n\t\tmargin: 0;\r\n\t\tmax-width: 242px;\r\n\r\n\t\t@include media(\"<=tablet\") {\r\n\t\t\tmax-width: 200px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n#wp-mail-smtp {\r\n\tmargin: 0;\r\n\r\n\t.wp-mail-smtp-page-title {\r\n\t\tbackground-color: #fff;\r\n\t\tmargin: 0 0 20px 0;\r\n\t\tpadding: 15px $content-padding;\r\n\t\tborder-bottom: 1px solid $border-color;\r\n\t\tborder-top: 1px solid $border-color;\r\n\r\n\t\ta {\r\n\t\t\tcolor: $grey;\r\n\t\t\tmargin-right: $content-padding;\r\n\t\t\ttext-decoration: none;\r\n\t\t\tfont-size: 125%;\r\n\r\n\t\t\t&.active {\r\n\t\t\t\tborder-bottom: 1px solid $orange;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.wp-mail-smtp-page {\r\n\t\tpadding: 0 $content-padding;\r\n\r\n\t\th1, h2 {\r\n\t\t\tfont-weight: bold;\r\n\t\t\tborder-bottom: 1px solid $border-color;\r\n\t\t\tmargin-bottom: $content-padding;\r\n\t\t\tmargin-top: 0;\r\n\t\t\tpadding-bottom: 10px;\r\n\t\t\tpadding-top: 0;\r\n\t\t}\r\n\r\n\t\t$bg: #F1F1F1;\r\n\t\t$fg: #BDBDBD;\r\n\t\t$borderWidth: 1px;\r\n\r\n\t\t.wp-mail-smtp-inline-radios {\r\n\t\t\tborder: solid $borderWidth $fg;\r\n\t\t\tdisplay: inline-block;\r\n\t\t\tborder-radius: 10px;\r\n\t\t\toverflow: hidden;\r\n\r\n\t\t\tinput[type=radio] {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tvisibility: hidden;\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\r\n\t\t\tlabel {\r\n\t\t\t\tcolor: #929292;\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t\tpadding: 5px 20px;\r\n\t\t\t\tmargin-right: -0.25em;\r\n\t\t\t}\r\n\r\n\t\t\tinput[type=radio]:checked + label{\r\n\t\t\t\tcolor: #000;\r\n\t\t\t\tbackground: $fg;\r\n\t\t\t}\r\n\r\n\t\t\tlabel + input[type=radio] + label {\r\n\t\t\t\tborder-left: solid $borderWidth $fg;\r\n\t\t\t}\r\n\r\n\t\t\tlabel:last-child {\r\n\t\t\t\tmargin-right: 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.wp-mail-smtp-mailers {\r\n\t\t\t.wp-mail-smtp-mailer {\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\twidth: 140px;\r\n\t\t\t\tmargin-right: 10px;\r\n\r\n\t\t\t\t&:last-child {\r\n\t\t\t\t\tmargin-right: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.wp-mail-smtp-mailer-image {\r\n\t\t\t\t\tbackground: #fff;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t\tborder: 2px solid #E5E5E5;\r\n\t\t\t\t\tborder-radius: $border-radius;\r\n\t\t\t\t\theight: 76px;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t\tmargin-bottom: 10px;\r\n\t\t\t\t\tcursor: pointer;\r\n\r\n\t\t\t\t\timg {\r\n\t\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\t\ttop: 50%;\r\n\t\t\t\t\t\tleft: 50%;\r\n\t\t\t\t\t\ttransform: translate(-50%, -50%);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t&.active .wp-mail-smtp-mailer-image {\r\n\t\t\t\t\tborder: 2px solid $orange;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.wp-mail-smtp-mailer-text{}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.wp-mail-smtp-mailer-options {\r\n\r\n\t\t\t.wp-mail-smtp-mailer-option-mail {\r\n\t\t\t\tblockquote {\r\n\t\t\t\t\tbackground: #E5E5E5;\r\n\t\t\t\t\tborder-radius: $border-radius;\r\n\t\t\t\t\tcolor: #929292;\r\n\t\t\t\t\tmargin-bottom: 20px;\r\n\t\t\t\t\tpadding: 15px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.wp-mail-smtp-submit {\r\n\t\t\tborder-top: 1px solid $border-color;\r\n\t\t\tpadding-top: 20px;\r\n\r\n\t\t\t.button-primary {\r\n\t\t\t\tbackground: $orange;\r\n\t\t\t\tborder: none;\r\n\t\t\t\tbox-shadow: 0 1px 0 $orange_dark;\r\n\t\t\t\ttext-shadow: 0 -1px 1px $orange_dark, 1px 0 1px $orange_dark, 0 1px 1px $orange_dark, -1px 0 1px $orange_dark;\r\n\r\n\t\t\t\t&:active, &:hover, &:focus {\r\n\t\t\t\t\toutline: none;\r\n\t\t\t\t\tbackground: $orange_dark;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.wp-mail-smtp-code-helper {\r\n\t\tbackground: rgba(0,0,0,.07);\r\n\t\tcursor: pointer;\r\n\t\tpadding: 4px;\r\n\r\n\t\t.dashicons {\r\n\t\t\tline-height: 1.5;\r\n\t\t}\r\n\t}\r\n\r\n\t.wp-mail-smtp-code-helper-text {\r\n\t\tdisplay: none;\r\n\t\tmargin-top: 5px;\r\n\r\n\t\tp {\r\n\t\t\t// This will remove jumpiness.\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\r\n\t\t&.active {\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n}\r\n","$orange: #FF982D;\r\n$orange_dark: darken($orange, 10%);\r\n$grey: #A9A9A9;\r\n$content-padding: 20px;\r\n$border-color: #E5E6E6;\r\n$border-radius: 4px;\r\n","@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//                http://include-media.com\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Hugo Giraudel (@hugogiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n\r\n\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  'phone': 320px,\r\n  'tablet': 768px,\r\n  'desktop': 1024px\r\n) !default;\r\n\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\r\n) !default;\r\n\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n//noinspection CssInvalidFunction\r\n@function im-log($message) {\r\n  @if feature-exists('at-error') {\r\n\t@error $message;\r\n  } @else {\r\n\t@warn $message;\r\n\t$_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {}\r\n}\r\n\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n\t@if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n\t@if not map-has-key($media-expressions, $condition) {\r\n\t  $operator: get-expression-operator($condition);\r\n\t  $prefix: get-expression-prefix($operator);\r\n\t  $value: get-expression-value($condition, $operator);\r\n\r\n\t  @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n\t\t  ($prefix == 'min' and $value > $no-media-breakpoint-value) {\r\n\t\t@return false;\r\n\t  }\r\n\t} @else if not index($im-no-media-expressions, $condition) {\r\n\t  @return false;\r\n\t}\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n\t@if str-index($expression, $operator) {\r\n\t  @return $operator;\r\n\t}\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n\t$dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n\t$value: map-get($breakpoints, $value);\r\n  } @else {\r\n\t$value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n\t// It is not possible to include a mixin inside a function, so we have to\r\n\t// rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n\t// functions cannot be called anywhere in Sass, we need to hack the call in\r\n\t// a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n\t// Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n\t$_: im-log('Unknown unit `#{unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n\t$value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n\t$value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n\t@return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n\t@return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n\t$result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == 'number' {\r\n\t@return $value;\r\n  } @else if type-of($value) != 'string' {\r\n\t$_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == '-');\r\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == '+' or $first-character == '-') {\r\n\t$value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n\t$character: str-slice($value, $i, $i);\r\n\r\n\t@if not (index(map-keys($numbers), $character) or $character == '.') {\r\n\t  @return to-length(if($minus, -$result, $result), str-slice($value, $i))\r\n\t}\r\n\r\n\t@if $character == '.' {\r\n\t  $digits: 1;\r\n\t} @else if $digits == 0 {\r\n\t  $result: $result * 10 + map-get($numbers, $character);\r\n\t} @else {\r\n\t  $digits: $digits * 10;\r\n\t  $result: $result + map-get($numbers, $character) / $digits;\r\n\t}\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n\t$_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n\t  (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\r\n\t@content;\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n\t@media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n\t  // Recursive call\r\n\t  @include media(slice($conditions, 2)...) {\r\n\t\t@content;\r\n\t  }\r\n\t}\r\n  }\r\n}\r\n","// Core admin style overrides.\r\n#wpcontent {\r\n\tpadding-left: 0 !important;\r\n\tposition: relative;\r\n\r\n\t@include media(\"<=phone\") {\r\n\t\tpadding-top: 46px;\r\n\t}\r\n}\r\n\r\n#wpbody {\r\n\t@include media(\"<=phone\") {\r\n\t\tpadding-top: 0;\r\n\t}\r\n}\r\n"],"names":[],"mappings":"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"}